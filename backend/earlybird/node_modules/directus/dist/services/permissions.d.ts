import { ItemsService, QueryOptions } from '../services/items';
import { AbstractServiceOptions, Item, PermissionsAction, PrimaryKey, Query } from '../types';
export declare class PermissionsService extends ItemsService {
    constructor(options: AbstractServiceOptions);
    getAllowedFields(action: PermissionsAction, collection?: string): Record<string, string[]>;
    readByQuery(query: Query, opts?: QueryOptions): Promise<Partial<Item>[]>;
    readMany(keys: PrimaryKey[], query?: Query, opts?: QueryOptions): Promise<Partial<Item>[]>;
    /**
     * @deprecated Use `readOne` or `readMany` instead
     */
    readByKey(keys: PrimaryKey[], query?: Query, action?: PermissionsAction): Promise<null | Partial<Item>[]>;
    readByKey(key: PrimaryKey, query?: Query, action?: PermissionsAction): Promise<null | Partial<Item>>;
}
