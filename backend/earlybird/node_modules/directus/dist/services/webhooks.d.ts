import { AbstractServiceOptions, Item, PrimaryKey } from '../types';
import { ItemsService, MutationOptions } from './items';
export declare class WebhooksService extends ItemsService {
    constructor(options: AbstractServiceOptions);
    createOne(data: Partial<Item>, opts?: MutationOptions): Promise<PrimaryKey>;
    createMany(data: Partial<Item>[], opts?: MutationOptions): Promise<PrimaryKey[]>;
    updateOne(key: PrimaryKey, data: Partial<Item>, opts?: MutationOptions): Promise<PrimaryKey>;
    updateMany(keys: PrimaryKey[], data: Partial<Item>, opts?: MutationOptions): Promise<PrimaryKey[]>;
    deleteOne(key: PrimaryKey, opts?: MutationOptions): Promise<PrimaryKey>;
    deleteMany(keys: PrimaryKey[], opts?: MutationOptions): Promise<PrimaryKey[]>;
    /**
     * @deprecated Use `createOne` or `createMany` instead
     */
    create(data: Partial<Item>[]): Promise<PrimaryKey[]>;
    create(data: Partial<Item>): Promise<PrimaryKey>;
    /**
     * @deprecated Use `updateOne` or `updateMany` instead
     */
    update(data: Partial<Item>, keys: PrimaryKey[]): Promise<PrimaryKey[]>;
    update(data: Partial<Item>, key: PrimaryKey): Promise<PrimaryKey>;
    update(data: Partial<Item>[]): Promise<PrimaryKey[]>;
    /**
     * @deprecated Use `deleteOne` or `deleteMany` instead
     */
    delete(key: PrimaryKey): Promise<PrimaryKey>;
    delete(keys: PrimaryKey[]): Promise<PrimaryKey[]>;
}
