"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const async_handler_1 = __importDefault(require("../utils/async-handler"));
const exceptions_1 = require("../exceptions");
const extensions_1 = require("../extensions");
const respond_1 = require("../middleware/respond");
const utils_1 = require("@directus/shared/utils");
const router = express_1.Router();
router.get('/:type', async_handler_1.default(async (req, res, next) => {
    const type = utils_1.depluralize(req.params.type);
    if (!utils_1.isAppExtension(type)) {
        throw new exceptions_1.RouteNotFoundException(req.path);
    }
    const extensions = extensions_1.listExtensions(type);
    res.locals.payload = {
        data: extensions,
    };
    return next();
}), respond_1.respond);
router.get('/:type/index.js', async_handler_1.default(async (req, res) => {
    const type = utils_1.depluralize(req.params.type);
    if (!utils_1.isAppExtension(type)) {
        throw new exceptions_1.RouteNotFoundException(req.path);
    }
    const extensionSource = extensions_1.getAppExtensionSource(type);
    if (extensionSource === undefined) {
        throw new exceptions_1.RouteNotFoundException(req.path);
    }
    res.setHeader('Content-Type', 'application/javascript; charset=UTF-8');
    res.end(extensionSource);
}));
exports.default = router;
