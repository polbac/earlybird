import { API_EXTENSION_PACKAGE_TYPES, API_EXTENSION_TYPES, APP_EXTENSION_PACKAGE_TYPES, APP_EXTENSION_TYPES, EXTENSION_PACKAGE_TYPES, EXTENSION_PKG_KEY, EXTENSION_TYPES } from '../constants';
export declare type AppExtensionType = typeof APP_EXTENSION_TYPES[number];
export declare type ApiExtensionType = typeof API_EXTENSION_TYPES[number];
export declare type ExtensionType = typeof EXTENSION_TYPES[number];
export declare type AppExtensionPackageType = typeof APP_EXTENSION_PACKAGE_TYPES[number];
export declare type ApiExtensionPackageType = typeof API_EXTENSION_PACKAGE_TYPES[number];
export declare type ExtensionPackageType = typeof EXTENSION_PACKAGE_TYPES[number];
export declare type Extension = {
    path: string;
    name: string;
    version?: string;
    type: ExtensionPackageType;
    entrypoint?: string;
    host?: string;
    children?: string[];
    local: boolean;
    root: boolean;
};
export declare type ExtensionManifestRaw = {
    name?: string;
    version?: string;
    dependencies?: Record<string, string>;
    [EXTENSION_PKG_KEY]?: {
        type?: string;
        path?: string;
        source?: string;
        host?: string;
        hidden?: boolean;
    };
};
export declare type ExtensionManifest = {
    name: string;
    version: string;
    dependencies?: Record<string, string>;
    [EXTENSION_PKG_KEY]: {
        type: ExtensionPackageType;
        path: string;
        source: string;
        host: string;
        hidden: boolean;
    };
};
export declare type ApiExtensionContext = {
    services: any;
    exceptions: any;
    database: any;
    env: any;
    getSchema: any;
};
//# sourceMappingURL=extensions.d.ts.map