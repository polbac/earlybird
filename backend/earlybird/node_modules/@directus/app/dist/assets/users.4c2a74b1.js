var n='---\npageClass: page-reference\n---\n\n# Users\n\n<div class="two-up">\n<div class="left">\n\n> Directus Users are the individual accounts that let you authenticate into the API and App. Each user belongs to a Role\n> which defines its granular Permissions. [Learn more about Users](/concepts/users/).\n\n</div>\n<div class="right">\n\n[[toc]]\n\n</div>\n</div>\n\n---\n\n## The User Object\n\n<div class="two-up">\n<div class="left">\n<div class="definitions">\n\n`id` **uuid**\\\nPrimary key of the user.\n\n`first_name` **string**\\\nFirst name of the user.\n\n`last_name` **string**\\\nLast name of the user.\n\n`email` **string**\\\nEmail address of the user.\n\n`password` **hash**\\\nPassword of the user.\n\n`location` **string**\\\nLocation of the user.\n\n`title` **string**\\\nTitle of the user.\n\n`description` **string**\\\nDescription of the user.\n\n`tags` **csv**\\\nTags for the user.\n\n`avatar` **many-to-one**\\\nAvatar file. Many-to-one to [files](/reference/api/system/files/).\n\n`language` **string**\\\nLanguage the Admin App is rendered in. See [our Crowdin page](https://locales.directus.io) for all available languages and\ntranslations.\n\n`theme` **string**\\\nOne of `auto`, `light`, `dark`.\n\n`tfa_secret` **string**\\\nWhen TFA is enabled, this holds the\n\n</div>\n</div>\n<div class="right">\n\n```json\n{\n\t"id": "0bc7b36a-9ba9-4ce0-83f0-0a526f354e07",\n\t"first_name": "Admin",\n\t"last_name": "User",\n\t"email": "admin@example.com",\n\t"password": "**********",\n\t"location": "New York City",\n\t"title": "CTO",\n\t"description": null,\n\t"tags": null,\n\t"avatar": null,\n\t"language": "en-US",\n\t"theme": "auto",\n\t"tfa_secret": null,\n\t"status": "active",\n\t"role": "653925a9-970e-487a-bfc0-ab6c96affcdc",\n\t"token": null,\n\t"last_access": "2021-02-05T10:18:13-05:00",\n\t"last_page": "/settings/roles/653925a9-970e-487a-bfc0-ab6c96affcdc"\n}\n```\n\n</div>\n</div>\n\n---\n\n## List Users\n\nList all users that exist in Directus.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Returns\n\nAn array of up to [limit](/reference/api/query/#limit) [user objects](#the-user-object). If no items are available, data\nwill be an empty array.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nGET /users\nSEARCH /users\n```\n\n[Learn more about SEARCH ->](/reference/api/introduction/#search-http-method)\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Query {\n\tusers: [directus_users]\n}\n```\n\n##### Example\n\n```graphql\nquery {\n\tusers {\n\t\tfirst_name\n\t\tlast_name\n\t\temail\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Retrieve a User\n\nList an existing user by primary key.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Returns\n\nReturns the requested [user object](#the-user-object).\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nGET /users/:id\n```\n\n##### Example\n\n```\nGET /users/72a1ce24-4748-47de-a05f-ce9af3033727\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Query {\n\tusers_by_id(id: ID!): directus_users\n}\n```\n\n##### Example\n\n```graphql\nquery {\n\tusers_by_id(id: "72a1ce24-4748-47de-a05f-ce9af3033727") {\n\t\tfirst_name\n\t\tlast_name\n\t\temail\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Retrieve the Current User\n\nRetrieve the currently authenticated user.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Returns\n\nReturns the [user object](#the-user-object) for the currently authenticated user.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nGET /users/me\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Query {\n\tusers_me: directus_users\n}\n```\n\n##### Example\n\n```graphql\nquery {\n\tusers_me {\n\t\temail\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Create a User\n\nCreate a new user\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Request Body\n\nA partial [user object](#the-user-object).\n\n`email` and `password` are required.\n\n### Returns\n\nReturns the [user object](#the-user-object) for the created user.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPOST /users\n```\n\n##### Example\n\n```json\n// POST /users\n\n{\n\t"email": "another@example.com",\n\t"password": "d1r3ctu5",\n\t"role": "c86c2761-65d3-43c3-897f-6f74ad6a5bd7"\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tcreate_users_item(data: create_directus_users_input!): directus_users\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tcreate_users_item(\n\t\tdata: { email: "another@example.com", password: "d1r3ctu5", role: "c86c2761-65d3-43c3-897f-6f74ad6a5bd7" }\n\t) {\n\t\temail\n\t\trole\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Create Multiple Users\n\nCreate multiple new users\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Request Body\n\nAn array of partial [user objects](#the-user-object).\n\n`email` and `password` are required.\n\n### Returns\n\nReturns the [user objects](#the-user-object) for the created users.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPOST /users\n```\n\n##### Example\n\n```json\n// POST /users\n\n[\n\t{\n\t\t"email": "admin@example.com",\n\t\t"password": "p455w0rd",\n\t\t"role": "c86c2761-65d3-43c3-897f-6f74ad6a5bd7"\n\t},\n\t{\n\t\t"email": "another@example.com",\n\t\t"password": "d1r3ctu5",\n\t\t"role": "c86c2761-65d3-43c3-897f-6f74ad6a5bd7"\n\t}\n]\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tcreate_users_items(data: [create_directus_users_input!]!): [directus_users]\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tcreate_users_items(\n\t\tdata: [\n\t\t\t{ email: "admin@example.com", password: "p455w0rd", role: "c86c2761-65d3-43c3-897f-6f74ad6a5bd7" }\n\t\t\t{ email: "another@example.com", password: "d1r3ctu5", role: "c86c2761-65d3-43c3-897f-6f74ad6a5bd7" }\n\t\t]\n\t) {\n\t\temail\n\t\trole\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Update a User\n\nUpdate an existing user.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Request Body\n\nA partial [user object](#the-user-object).\n\n### Returns\n\nReturns the [user object](#the-user-object) for the updated user.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPATCH /users/:id\n```\n\n##### Example\n\n```json\n// PATCH /users/72a1ce24-4748-47de-a05f-ce9af3033727\n\n{\n\t"title": "CTO"\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tupdate_users_item(id: ID!, data: update_directus_users_input!): directus_users\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tupdate_users_item(id: "72a1ce24-4748-47de-a05f-ce9af3033727", data: { title: "CTO" }) {\n\t\tfirst_name\n\t\tlast_name\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Update Multiple Users\n\nUpdate multiple existing users.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Request Body\n\n<div class="definitions">\n\n`keys` **Required**\\\nArray of primary keys of the users you\'d like to update.\n\n`data` **Required**\\\nAny of [the user object](#the-user-object)\'s properties.\n\n</div>\n\n### Returns\n\nReturns the [user objects](#the-user-object) for the updated users.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPATCH /users\n```\n\n##### Example\n\n```json\n// PATCH /users\n\n{\n\t"keys": ["72a1ce24-4748-47de-a05f-ce9af3033727", "9c3d75a8-7a5f-41a4-be0a-1488fd974511"],\n\t"data": {\n\t\t"title": "CTO"\n\t}\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tupdate_users_items(ids: [ID!]!, data: update_directus_users_input!): [directus_users]\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tupdate_users_items(\n\t\tids: ["72a1ce24-4748-47de-a05f-ce9af3033727", "9c3d75a8-7a5f-41a4-be0a-1488fd974511"]\n\t\tdata: { title: "CTO" }\n\t) {\n\t\tfirst_name\n\t\tlast_name\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Delete a User\n\nDelete an existing user.\n\n<div class="two-up">\n<div class="left">\n\n### Returns\n\nEmpty body.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nDELETE /users/:id\n```\n\n##### Example\n\n```\nDELETE /users/72a1ce24-4748-47de-a05f-ce9af3033727\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tdelete_users_item(id: ID!): delete_one\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tdelete_users_item(id: "72a1ce24-4748-47de-a05f-ce9af3033727") {\n\t\tid\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Delete Multiple Users\n\nDelete multiple existing users.\n\n<div class="two-up">\n<div class="left">\n\n### Request Body\n\nAn array of user primary keys\n\n### Returns\n\nEmpty body.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nDELETE /users\n```\n\n##### Example\n\n```json\n// Request\n["653925a9-970e-487a-bfc0-ab6c96affcdc", "c86c2761-65d3-43c3-897f-6f74ad6a5bd7"]\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tdelete_users_items(ids: [ID!]!): delete_many\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tdelete_users_items(ids: ["72a1ce24-4748-47de-a05f-ce9af3033727", "9c3d75a8-7a5f-41a4-be0a-1488fd974511"]) {\n\t\tids\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Invite a new User\n\nInvite a new user by email.\n\n<div class="two-up">\n<div class="left">\n\n### Request Body\n\n<div class="definitions">\n\n`email` **Required**\\\nUser email to invite.\n\n`role` **Required**\\\nRole of the new user.\n\n`invite_url`\\\nProvide a custom invite url which the link in the email will lead to. The invite token will be passed as a parameter.\\\n**Note**: You need to configure the\n[`USER_INVITE_URL_ALLOW_LIST` environment variable](/reference/environment-variables/#security) to enable this feature.\n\n</div>\n\n### Returns\n\nEmpty body.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPOST /users/invite\n```\n\n##### Example\n\n```json\n// POST /users/invite\n\n{\n\t"email": "another@example.com",\n\t"role": "c86c2761-65d3-43c3-897f-6f74ad6a5bd7"\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tusers_invite(email: String!, role: String!, invite_url: String): Boolean\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tusers_invite(email: "another@example.com", role: "c86c2761-65d3-43c3-897f-6f74ad6a5bd7")\n}\n```\n\n</div>\n</div>\n\n---\n\n## Accept User Invite\n\nAccept your invite. The [invite user endpoint](#invite-a-new-user) sends the email a link to the Admin App.\n\nThis link includes a token, which is then used to activate the invited user.\n\n<div class="two-up">\n<div class="left">\n\n### Request Body\n\n<div class="definitions">\n\n`token` **Required**\\\nAccept invite token.\n\n`password` **Required**\\\nPassword for the user.\n\n</div>\n\n### Returns\n\nEmpty body.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPOST /users/invite/accept\n```\n\n##### Example\n\n```json\n// POST /users/invite/accept\n\n{\n\t"token": "eyJh...KmUk",\n\t"password": "d1r3ctu5"\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tusers_invite_accept(token: String!, password: String!): Boolean\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tusers_invite_accept(token: "eyJh...KmUk", password: "d1r3ctu5")\n}\n```\n\n</div>\n</div>\n\n---\n\n## Generate Two-Factor Authentication Secret\n\nGenerates a secret and returns the URL to be used in an authenticator app.\n\n<div class="two-up">\n<div class="left">\n\n### Request Body\n\n<div class="definitions">\n\n`password` **Required**\\\nThe user\'s password.\n\n</div>\n\n### Returns\n\n<div class="definitions">\n\n`secret` **string**\\\nOTP secret to be saved in the authenticator app.\n\n`otpauth_url` **string**\\\n`otpauth://` formatted URL. Can be rendered as QR code and used in most authenticator apps.\n\n</div>\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPOST /users/me/tfa/generate\n```\n\n##### Example\n\n```json\n// POST /users/me/tfa/generate\n{\n\t"password": "d1r3ctu5"\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tusers_me_tfa_generate(password: String!): users_me_tfa_generate_data\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tusers_me_tfa_generate(password: "d1r3ctu5") {\n\t\tsecret\n\t\totpauth_url\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Enable Two-Factor Authentication\n\nAdds a TFA secret to the user account.\n\n<div class="two-up">\n<div class="left">\n\n### Request Body\n\n<div class="definitions">\n\n`secret` **Required**\\\nThe TFA secret from tfa/generate.\n\n`otp` **Required**\\\nOTP generated with the secret, to recheck if the user has a correct TFA setup\n\n</div>\n\n### Returns\n\n<div class="definitions">\n\nEmpty response.\n\n</div>\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPOST /users/me/tfa/enable\n```\n\n##### Example\n\n```json\n// POST /users/me/tfa/enable\n{\n\t"otp": "123456",\n\t"secret": "3CtiutsNBmY3szHE"\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tusers_me_tfa_enable(otp: String!, secret: String!): Boolean\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tusers_me_tfa_enable(otp: "123456", secret: "3CtiutsNBmY3szHE")\n}\n```\n\n</div>\n</div>\n\n---\n\n## Disable Two-Factor Authentication\n\nDisables two-factor authentication by removing the OTP secret from the user.\n\n<div class="two-up">\n<div class="left">\n\n### Request Body\n\n<div class="definitions">\n\n`otp` **Required**\\\nOne-time password generated by the authenticator app.\n\n</div>\n\n### Returns\n\nEmpty response.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPOST /users/me/tfa/disable\n```\n\n##### Example\n\n```json\n// POST /users/me/tfa/disable\n\n{\n\t"otp": "859014"\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tusers_me_tfa_disable(otp: String!): Boolean\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tusers_me_tfa_disable(otp: "591763")\n}\n```\n\n</div>\n</div>\n';export{n as default};
