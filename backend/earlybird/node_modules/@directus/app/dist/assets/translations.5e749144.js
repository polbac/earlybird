var e="# Translations\n\n> Directus is maintained by a global community of contributors who speak many different languages. Not only does\n> Directus allow you to manage multilingual content, the App itself also supports multiple languages.\n\n## App Translations\n\nDirectus supports internationalization across its entire Admin App. Many languages are currently supported, with more\nbeing added all the time. You can add or refine any languages through our [CrowdIn](https://locales.directus.io/)\nintegration.\n\n## Schema Translations\n\nDirectus uses [database mirroring](/concepts/databases/#database-mirroring) to dynamically pull in the technical names\nof your schema's tables ([Collections](/concepts/collections/)) and columns ([Fields](/concepts/fields/)), prettifying\nand formatting them for display throughout the App. You can then add additional schema translations to further support\ndifferent languages.\n\n::: tip Renaming Collections and Fields\n\nIf your project uses more _technical_ table or column names (eg: `cust` or `f_name`), you can also use schema\ntranslations to _rename_ Collections and Fields to something more intuitive (eg: `Customers` or `First Name`).\n\n:::\n\n## Content Translations\n\nOne of the most important features in Directus is the ability to manage multilingual content. While there are many\ndifferent ways to accomplish this, such as creating _standard_ fields in the parent collection for each language, it is\nmore extensible to use our _relational_ translation fields. These allow you to dynamically manage content in as many\nlanguages as is required, using a more intuitive interface.\n\nMixing standard and translated fields also allows language-agnostic data (such as dates or toggles) to remain within the\nparent collection.\n\n### Integrating with Translation Services\n\nThere are two common ways to integrate with a third-party translation service.\n\nFor human-powered translation services, you can create a dedicated Role with limited permissions to properly scope their\naccess to only the content they will be translating. You can also create\n[Workflows](/guides/permissions/#configuring-workflows) that require a certain internal Role to then approve the\nchanges.\n\nFor machine-powered translation services, you could use the Directus API and Event Hooks to integrate the two platforms\ntogether. In this way, when your users create or update new content, an event hook can fire that fetches translations\nfrom the third-party service, saving that data into the translations.\n\nYet another option would be to create a [Custom Interface](/guides/interfaces/) that integrates with the third-party\nservice to fetch translation in real-time.\n";export{e as default};
