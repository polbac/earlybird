var n='---\npageClass: page-reference\n---\n\n# Utilities\n\n<div class="two-up">\n<div class="left">\n\n> Utilities are the various helper endpoints located within the API.\n\n</div>\n<div class="right">\n\n[[toc]]\n\n</div>\n</div>\n\n---\n\n## Generate a Hash\n\nGenerate a hash for a given string.\n\n<div class="two-up">\n<div class="left">\n\n### Request Body\n\n<div class="definitions">\n\n`string` **Required**\\\nString to hash.\n\n</div>\n\n### Returns\n\nHashed string.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPOST /utils/hash/generate\n```\n\n##### Example\n\n```json\n// POST /utils/hash/generate\n\n{\n\t"string": "Hello World!"\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tutils_hash_generate(string: String!): String\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tutils_hash_generate(string: "Hello World!")\n}\n```\n\n</div>\n</div>\n\n---\n\n## Verify a Hash\n\nVerify a string with a hash.\n\n<div class="two-up">\n<div class="left">\n\n### Request Body\n\n<div class="definitions">\n\n`string` **Required**\\\nSource string.\n\n`hash` **Required**\\\nHash you want to verify against.\n\n</div>\n\n### Returns\n\nBoolean.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPOST /utils/hash/verify\n```\n\n##### Example\n\n```json\n// POST /utils/hash/verify\n\n{\n\t"string": "Hello World!",\n\t"hash": "$arg...fEfM"\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tutils_hash_verify(hash: String!, string: String!): Boolean\n}\n```\n\n</div>\n</div>\n\n---\n\n## Manually Sort Items in Collection\n\nIf a collection has a sort field, this util can be used to move items in that manual order.\n\n<div class="two-up">\n<div class="left">\n\n### Request Body\n\n<div class="definitions">\n\n`item` **Required**\\\nPrimary key of the item you\'re moving in the collection.\n\n`to` **Required**\\\nPrimary key of the item you\'re moving the source item too.\n\n</div>\n\n### Returns\n\nEmpty body.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPOST /utils/sort/:collection\n```\n\n##### Example\n\n```json\n// POST /utils/sort/articles\n\n{\n\t"item": 16,\n\t"to": 51\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tutils_sort(collection: String!, item: ID!, to: ID!): Boolean\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tutils_sort(collection: "articles", item: 16, to: 51)\n}\n```\n\n</div>\n</div>\n\n---\n\n## Import Data from File\n\nImport multiple records from a JSON or CSV file into a collection. Relies on a `multipart/form-data` encoded request,\njust like regular file uploads. Check [Upload a File](/reference/api/system/files/#upload-a-file) for more information.\n\nThe import endpoint expects the file structure to match [the export query parameter](/reference/api/query/#export). For\nJSON, this is an array of objects, where every object is an item. For CSV, the first line has to be the columns header.\n\n<div class="two-up">\n<div class="left">\n\n### Request Body\n\nSend the file in a `multipart/form-data` request. See [Upload a File](/reference/api/system/files/#upload-a-file) for\nmore information.\n\n### Returns\n\nEmpty body.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPOST /utils/import/:collection\n```\n\n##### Example\n\n```\nPOST /utils/import/articles\n\nContent-Type: multipart/form-data; charset=utf-8; boundary=__X_BOUNDARY__\nContent-Length: 3442422\n\n--__X_BOUNDARY__\nContent-Disposition: form-data; name="file"; filename="articles.csv"\nContent-Type: text/csv\n\n"id","title","another","created_by"\n1,"My First Articled","abc","506385A2-E444-4AE2-A860-F00957A62C8A"\n2,"My Second Article","abc","506385A2-E444-4AE2-A860-F00957A62C8A"\n3,"My Updated Third Article","abc","506385A2-E444-4AE2-A860-F00957A62C8A"\n4,"My Fourth Article","abc","506385A2-E444-4AE2-A860-F00957A62C8A"\n5,"My Fifth Article","abc","506385A2-E444-4AE2-A860-F00957A62C8A"\n...\n```\n\n### GraphQL\n\nn/a\n\n</div>\n</div>\n\n---\n\n## Clear the Internal Cache\n\nResets both the data and schema cache of Directus. This endpoint is only available to admin users.\n\n<div class="two-up">\n<div class="left">\n\n### Request Body\n\nn/a\n\n### Returns\n\nEmpty body\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPOST /utils/cache/clear\n```\n\n### GraphQL\n\n```graphql\nmutation {\n\tutils_cache_clear\n}\n```\n\n</div>\n</div>\n';export{n as default};
