var e="# GitHub CI\n\n> This guide explains how to publish a forked version of Directus on NPM, dockerhub and GHCR. You need to first\n> [create a fork](/contributing/running-locally/)\n\n::: warning Using a fork in production is neither supported nor recommended.\n\nOnly do so if:\n\n1. The feature you want to implement doesn't satisfy the 80/20 principle\n2. There is a technical limitation preventing you from implementing it as an extension\n\nForks are not officially supported - please don't submit fork-specific bugs and questions on the official repo.\n\nIf you suspect a bug to not be part of your changes please confirm this by reproducing it with the official version\n**before** submitting an issue.\n\n:::\n\n::: tip Minimum Requirements\n\nIf you want to publish your fork to hub.docker.com or NPM you need to have an account there.\n\nNote: to publish to NPM you probably have to change all the package names. Publishing to NPM should almost never be\nnecessary.\n\n:::\n\n## 1. Setup environment variables/secrets\n\n## General\n\n| Variable          | Description                                                            | Example                     |\n| ----------------- | ---------------------------------------------------------------------- | --------------------------- |\n| `GHCR_IMAGE`      | Image name for GitHub Container Registry. Be sure to use the full URL. | `ghcr.io/directus/directus` |\n| `DOCKERHUB_IMAGE` | Image name for hub.docker.com, no prefix.                              | `directus/directus`         |\n\n| Secret               | Description                                             | Example        |\n| -------------------- | ------------------------------------------------------- | -------------- |\n| `NPM_TOKEN`          | Your NPM token. Make sure to use the type \"automation\". | `12345678-...` |\n| `DOCKERHUB_USERNAME` | Dockerhub Username                                      | `directus`     |\n| `DOCKERHUB_PASSWORD` | Dockerhub Password                                      | `hunter2`      |\n\n## 2. Create a release\n\n```bash\nnpm run release\n```\n";export{e as default};
