var n='---\npageClass: page-reference\n---\n\n# Collections\n\n<div class="two-up">\n<div class="left">\n\n> Collections are the individual collections of items, similar to tables in a database. Changes to collections will\n> alter the schema of the database. [Learn more about Collections](/concepts/collections/).\n\n</div>\n<div class="right">\n\n[[toc]]\n\n</div>\n</div>\n\n---\n\n## The Collection Object\n\n<div class="two-up">\n<div class="left">\n<div class="definitions">\n\n`collection` **string**\\\nName of the collection. This matches the table name in the database.\n\n</div>\n\n#### Meta\n\nDirectus metadata, primarily used in the Admin App.\n\n<div class="definitions">\n\n`collection` **string**\\\nName of the collection. This matches the table name in the database.\n\n`icon` **string**\\\nIcon displayed in the Admin App when working with this collection.\n\n`note` **string**\\\nShort description displayed in the Admin App.\n\n`display_template` **string**\\\nHow items in this collection should be displayed when viewed relationally in the Admin App.\n\n`hidden` **boolean**\\\nWhether or not this collection is hidden in the Admin App.\n\n`singleton` **boolean**\\\nWhether or not this collection is treated as a singleton.\n\n`translations` **array**\\\nHow this collection\'s name is displayed in the different languages in the Admin App.\n\n`archive_field` **string**\\\nWhat field in the collection holds the archived state.\n\n`archive_value` **string**\\\nWhat value the archive field should be set to when archiving an item.\n\n`unarchive_value` **string**\\\nWhat value the archive field should be set to when unarchiving an item.\n\n`archive_app_filter` **boolean**\\\nWhether or not the Admin App should allow the user to view archived items.\n\n`sort_field` **boolean**\\\nWhat field holds the sort value on the collection. The Admin App uses this to allow drag-and-drop manual sorting.\n\n</div>\n\n#### Schema\n\n"Raw" database information. Based on the database vendor used, different information might be returned. The following\nare available for all drivers.\n\n<div class="definitions">\n\n`name` **string**\\\nThe table name.\n\n`comment` **string**\\\nThe table comment.\n\n</div>\n</div>\n<div class="right">\n\n```json\n{\n\t"collection": "articles",\n\t"meta": {\n\t\t"collection": "articles",\n\t\t"icon": "article",\n\t\t"note": "Blog posts",\n\t\t"display_template": "{{ title }}",\n\t\t"hidden": false,\n\t\t"singleton": false,\n\t\t"translations": [\n\t\t\t{\n\t\t\t\t"language": "en-US",\n\t\t\t\t"translation": "Articles"\n\t\t\t},\n\t\t\t{\n\t\t\t\t"language": "nl-NL",\n\t\t\t\t"translation": "Artikelen"\n\t\t\t}\n\t\t],\n\t\t"archive_field": "status",\n\t\t"archive_value": "archived",\n\t\t"unarchive_value": "draft",\n\t\t"archive_app_filter": true,\n\t\t"sort_field": "sort"\n\t},\n\t"schema": {\n\t\t"name": "pages",\n\t\t"comment": null\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## List Collections\n\nList the available collections.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nThis endpoint doesn\'t currently support any query parameters.\n\n### Returns\n\nAn array of [collection objects](#the-collection-object).\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nGET /collections\nSEARCH /collections\n```\n\n[Learn more about SEARCH ->](/reference/api/introduction/#search-http-method)\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Query {\n\tcollections: [directus_collections]\n}\n```\n\n##### Example\n\n```graphql\nquery {\n\tcollections {\n\t\t...\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Retrieve a Collection\n\nRetrieve a single collection by table name.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nThis endpoint doesn\'t currently support any query parameters.\n\n### Returns\n\nA [collection object](#the-collection-object).\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nGET /collections/:collection\n```\n\n##### Example\n\n```\nGET /collections/articles\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Query {\n\tcollections_by_name(name: String!): directus_collections\n}\n```\n\n##### Example\n\n```graphql\nquery {\n\tcollections_by_name(name: "articles") {\n\t\t...\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Create a Collection\n\nCreate a new Collection. This will create a new table in the database as well.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nThis endpoint doesn\'t currently support any query parameters.\n\n### Request Body\n\nThe `collection` property is required, all other properties of the [collection object](#the-collection-object) are\noptional.\n\nYou are able to provide an array of `fields` to be created during the creation of the collection. See the\n[fields object](/reference/api/system/fields/#the-fields-object) for more information on what properties are available\nin a field.\n\n### Returns\n\nThe [collection object](#the-collection-object) for the collection created in this request.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPOST /collections\n```\n\n##### Example\n\n```json\n// POST /collections\n\n{\n\t"collection": "testimonials",\n\t"meta": {\n\t\t"icon": "format_quote"\n\t}\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tcreate_collections_item(data: directus_collections): directus_collections\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tcreate_collections_item(data: {\n\t\tcollection: "testimonials",\n\t\tmeta: {\n\t\t\ticon: "format_quote"\n\t\t}\n\t}) {\n\t\t...\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Update a Collection\n\nUpdate the metadata for an existing collection.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nThis endpoint doesn\'t currently support any query parameters.\n\n### Request Body\n\nYou can only update the `meta` values of the the [collection object](#the-collection-object). Updating the collection\nname is not supported at this time.\n\n### Returns\n\nThe [collection object](#the-collection-object) for the updated collection in this request.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPATCH /collections/:collection\n```\n\n##### Example\n\n```json\n// PATCH /collections/testimonials\n\n{\n\t"meta": {\n\t\t"note": "Short quotes from happy customers."\n\t}\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tupdate_collections_item(collection: String!, data: update_directus_collections_input!): directus_collections\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tupdate_collections_item(collection: "testimonials", data: { meta: { note: "Short quotes from happy customers." } }) {\n\t\tcollection\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Delete a Collection\n\nDelete a collection.\n\n<div class="two-up">\n<div class="left">\n\n::: danger Destructive\n\nBe aware, this will delete the table from the database, including all items in it. This action can\'t be undone.\n\n:::\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nDELETE /collections/:collection\n```\n\n##### Example\n\n```\nDELETE /collections/articles\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tdelete_collections_item(collection: String!): delete_collection\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tdelete_collections_item(collection: "articles") {\n\t\tcollection\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n';export{n as default};
