var n='---\npageClass: page-reference\n---\n\n# Folders\n\n<div class="two-up">\n<div class="left">\n\n> Folders can be used to organize files within the platform. Folders are virtual, and aren\'t mirrored within the storage\n> adapter.\n\n</div>\n<div class="right">\n\n[[toc]]\n\n</div>\n</div>\n\n---\n\n## The Folder Object\n\n<div class="two-up">\n<div class="left">\n<div class="definitions">\n\n`id` **uuid**\\\nPrimary key of the folder.\n\n`name` **string**\\\nName of the folder.\n\n`parent` **many-to-one**\\\nParent folder. Many-to-one to folders (recursive).\n\n</div>\n</div>\n<div class="right">\n\n```json\n{\n\t"data": {\n\t\t"id": "fc02d733-95b8-4e27-bd4b-08a32cbe4e66",\n\t\t"name": "Test",\n\t\t"parent": null\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## List Folders\n\nList all folders that exist in Directus.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Returns\n\nAn array of up to [limit](/reference/api/query/#limit) [folder objects](#the-folder-object). If no items are available,\ndata will be an empty array.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nGET /folders\nSEARCH /folders\n```\n\n[Learn more about SEARCH ->](/reference/api/introduction/#search-http-method)\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Query {\n\tfolders: directus_folders\n}\n```\n\n##### Example\n\n```graphql\nquery {\n\tfolders {\n\t\tname\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Retrieve a Folder\n\nList all folders that exist in Directus.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Returns\n\nReturns a [folder object](#the-folder-object) if a valid primary key was provided.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nGET /folders/:id\n```\n\n##### Example\n\n```\nGET /folders/fc02d733-95b8-4e27-bd4b-08a32cbe4e66\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Query {\n\tfolders_by_id(id: ID!): directus_folders\n}\n```\n\n##### Example\n\n```graphql\nquery {\n\tfolders_by_id(id: "fc02d733-95b8-4e27-bd4b-08a32cbe4e66") {\n\t\tname\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Create a Folder\n\nCreate a new (virtual) folder.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Request Body\n\nA partial [folder object](#the-folder-object). `name` is required.\n\n### Returns\n\nReturns the [folder object](#the-folder-object) of the folder that was created.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPOST /folders\n```\n\n##### Example\n\n```json\n// POST /folders\n\n{\n\t"name": "Nature"\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tcreate_folders_item(data: create_directus_folders_input): directus_folders\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tcreate_folders_item(data: { name: "Nature" }) {\n\t\tid\n\t\tname\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Create Multiple Folders\n\nCreate multiple new (virtual) folders.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Request Body\n\nAn array of partial [folder objects](#the-folder-object). `name` is required.\n\n### Returns\n\nReturns the [folder object](#the-folder-object) of the folder that was created.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPOST /folders\n```\n\n##### Example\n\n```json\n// POST /folders\n\n[\n\t{\n\t\t"name": "Nature"\n\t},\n\t{\n\t\t"name": "Cities"\n\t}\n]\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tcreate_folders_items(data: [create_directus_folders_input]): [directus_folders]\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tcreate_folders_items(data: [{ name: "Nature" }, { name: "Cities" }]) {\n\t\tid\n\t\tname\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Update a Folder\n\nUpdate an existing folder.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Request Body\n\nA partial [folder object](#the-folder-object).\n\n### Returns\n\nReturns the [folder object](#the-folder-object) of the folder that was updated.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPATCH /folders/:id\n```\n\n##### Example\n\n```json\n// PATCH /folders/fac21847-d5ce-4e4b-a288-9abafbdfbc87\n\n{\n\t"parent": "d97c2e0e-293d-4eb5-9e1c-27d3460ad29d"\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tupdate_folders_item(id: ID!, data: update_directus_folders_input): directus_folders\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tupdate_folders_item(\n\t\tid: "fac21847-d5ce-4e4b-a288-9abafbdfbc87"\n\t\tdata: { parent: "d97c2e0e-293d-4eb5-9e1c-27d3460ad29d" }\n\t) {\n\t\tid\n\t\tname\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Update Multiple Folders\n\nUpdate multiple existing folders.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Request Body\n\n<div class="definitions">\n\n`keys` **Required**\\\nArray of primary keys of the folders you\'d like to update.\n\n`data` **Required**\\\nAny of [the folder object](#the-folder-object)\'s properties.\n\n</div>\n\n### Returns\n\nReturns the [folder objects](#the-folder-object) of the folders that were updated.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPATCH /folders\n```\n\n##### Example\n\n```json\n// PATCH /folders\n\n{\n\t"keys": ["fac21847-d5ce-4e4b-a288-9abafbdfbc87", "a5bdb793-dd85-4ac9-882a-b42862092983"],\n\t"data": {\n\t\t"parent": "d97c2e0e-293d-4eb5-9e1c-27d3460ad29d"\n\t}\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tupdate_folders_items(ids: [ID!]!, data: update_directus_folders_input): [directus_folders]\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tupdate_folders_items(\n\t\tids: ["fac21847-d5ce-4e4b-a288-9abafbdfbc87", "a5bdb793-dd85-4ac9-882a-b42862092983"]\n\t\tdata: { parent: "d97c2e0e-293d-4eb5-9e1c-27d3460ad29d" }\n\t) {\n\t\tid\n\t\tname\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Delete a Folder\n\nDelete an existing folder.\n\n<div class="two-up">\n<div class="left">\n\n::: tip Files\n\nAny files in this folder will be moved to the root folder.\n\n:::\n\n### Returns\n\nEmpty body.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nDELETE /folders/:id\n```\n\n##### Example\n\n```\n// DELETE /folders/a5bdb793-dd85-4ac9-882a-b42862092983\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tdelete_folders_item(id: ID!): delete_one\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tdelete_folders_item(id: "fac21847-d5ce-4e4b-a288-9abafbdfbc87") {\n\t\tid\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Delete Multiple Folders\n\nDelete multiple existing folders.\n\n<div class="two-up">\n<div class="left">\n\n::: tip Files\n\nAny files in these folders will be moved to the root folder.\n\n:::\n\n### Request Body\n\nAn array of folder primary keys.\n\n### Returns\n\nEmpty body.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nDELETE /folders\n```\n\n##### Example\n\n```json\n// DELETE /folders\n\n["d97c2e0e-293d-4eb5-9e1c-27d3460ad29d", "fc02d733-95b8-4e27-bd4b-08a32cbe4e66"]\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tdelete_folders_items(ids: [ID!]!): delete_many\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tdelete_folders_items(ids: ["fac21847-d5ce-4e4b-a288-9abafbdfbc87", "a5bdb793-dd85-4ac9-882a-b42862092983"]) {\n\t\tids\n\t}\n}\n```\n\n</div>\n</div>\n';export{n as default};
