var n='---\npageClass: page-reference\n---\n\n# Preset\n\n<div class="two-up">\n<div class="left">\n\n> Presets hold the preferences of individual users of the platform. This allows Directus to show and maintain custom\n> item listings and bookmarks for users of the app.\n> [Learn more about Presets](/concepts/collections/#collection-presets-bookmarks).\n\n</div>\n<div class="right">\n\n[[toc]]\n\n</div>\n</div>\n\n---\n\n## The Preset Object\n\n<div class="two-up">\n<div class="left">\n<div class="definitions">\n\n`id` **uuid**\\\nPrimary key of the preset.\n\n`bookmark` **string**\\\nThe title of the bookmark. If this value is `null`, it\'s considered a preset instead of a bookmark.\n\n`user` **many-to-one**\\\nUser this preset applies to. Many-to-one to [users](/reference/api/system/users/).\n\n`role` **many-to-one**\\\nRole this preset applies to. Many-to-one to [users](/reference/api/system/roles/).\n\n`collection` **string**\\\nCollection this preset applies to.\n\n`search` **string**\\\nThe search query used in the preset.\n\n`filters` **array**\\\nThe filters used in the preset.\n\n`layout` **string**\\\nThe layout used in this preset.\n\n`layout_query` **object**\\\nThe item query used by the layout. This structure is based on the used layout.\n\n`layout_options` **object**\\\nThe options used by the layout. This structure is based on the used layout.\n\n</div>\n</div>\n<div class="right">\n\n```json\n{\n\t"id": 39,\n\t"bookmark": null,\n\t"user": "410b5772-e63f-4ae6-9ea2-39c3a31bd6ca",\n\t"role": null,\n\t"collection": "directus_activity",\n\t"search": null,\n\t"filters": [],\n\t"layout": "tabular",\n\t"layout_query": {\n\t\t"tabular": {\n\t\t\t"sort": "-timestamp",\n\t\t\t"fields": ["action", "collection", "timestamp", "user"],\n\t\t\t"page": 1\n\t\t}\n\t},\n\t"layout_options": {\n\t\t"tabular": {\n\t\t\t"widths": {\n\t\t\t\t"action": 100,\n\t\t\t\t"collection": 210,\n\t\t\t\t"timestamp": 240,\n\t\t\t\t"user": 240\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## List Presets\n\nList all presets that exist in Directus.\n\n<div class="two-up">\n<div class="left">\n\n::: tip Permissions\n\nThe data returned in this endpoint will be filtered based on the user\'s permissions. For example, presets for a role\nother than the current user\'s role won\'t be returned.\n\n:::\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Returns\n\nAn array of up to [limit](/reference/api/query/#limit) [preset objects](#the-preset-object). If no items are available,\ndata will be an empty array.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nGET /presets\nSEARCH /presets\n```\n\n[Learn more about SEARCH ->](/reference/api/introduction/#search-http-method)\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Query {\n\tpresets: [directus_presets]\n}\n```\n\n##### Example\n\n```graphql\nquery {\n\tpresets {\n\t\tid\n\t\tuser\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Retrieve a preset\n\nList an existing preset by primary key.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Returns\n\nReturns the requested [preset object](#the-preset-object).\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nGET /presets/:id\n```\n\n##### Example\n\n```\nGET /presets/42\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Query {\n\tpresets_by_id(id: ID!): directus_presets\n}\n```\n\n##### Example\n\n```graphql\nquery {\n\tpresets_by_id(id: 42) {\n\t\tid\n\t\tuser\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Create a Preset\n\nCreate a new preset.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Request Body\n\nA partial [preset object](#the-preset-object).\n\n### Returns\n\nReturns the [preset object](#the-preset-object) for the created preset.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPOST /presets\n```\n\n##### Example\n\n```json\n// POST /presets\n\n{\n\t"user": "410b5772-e63f-4ae6-9ea2-39c3a31bd6ca",\n\t"layout": "cards",\n\t"search": "Directus"\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tcreate_presets_item(data: create_directus_presets_input!): directus_presets\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tcreate_presets_item(data: { user: "410b5772-e63f-4ae6-9ea2-39c3a31bd6ca", layout: "cards", search: "Directus" }) {\n\t\tid\n\t\tuser\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Create Multiple Presets\n\nCreate multiple new presets.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Request Body\n\nAn array of partial [preset objects](#the-preset-object).\n\n### Returns\n\nReturns the [preset object](#the-preset-object) for the created preset.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPOST /presets\n```\n\n##### Example\n\n```json\n// POST /presets\n\n[\n\t{\n\t\t"collection": "directus_files",\n\t\t"user": "410b5772-e63f-4ae6-9ea2-39c3a31bd6ca",\n\t\t"layout": "cards",\n\t\t"search": "Directus"\n\t},\n\t{\n\t\t"collection": "articles",\n\t\t"user": "410b5772-e63f-4ae6-9ea2-39c3a31bd6ca",\n\t\t"layout": "tabular"\n\t}\n]\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tcreate_presets_items(data: [create_directus_presets_input!]!): [directus_presets]\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tcreate_presets_items(\n\t\tdata: [\n\t\t\t{\n\t\t\t\tcollection: "directus_files"\n\t\t\t\tuser: "410b5772-e63f-4ae6-9ea2-39c3a31bd6ca"\n\t\t\t\tlayout: "cards"\n\t\t\t\tsearch: "Directus"\n\t\t\t}\n\t\t\t{ collection: "articles", user: "410b5772-e63f-4ae6-9ea2-39c3a31bd6ca", layout: "tabular" }\n\t\t]\n\t) {\n\t\tid\n\t\tuser\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Update a Preset\n\nUpdate an existing preset.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Request Body\n\nA partial [preset object](#the-preset-object).\n\n### Returns\n\nReturns the [preset object](#the-preset-object) for the updated preset.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPATCH /presets/:id\n```\n\n##### Example\n\n```json\n// PATCH /presets/34\n\n{\n\t"layout": "tabular"\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tupdate_presets_item(id: ID!, data: update_directus_presets_input): directus_presets\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tupdate_presets_item(id: 32, data: { layout: "tabular" }) {\n\t\tid\n\t\tuser\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Update Multiple Presets\n\nUpdate multiple existing presets.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Request Body\n\n<div class="definitions">\n\n`keys` **Required**\\\nArray of primary keys of the presets you\'d like to update.\n\n`data` **Required**\\\nAny of [the preset object](#the-preset-object)\'s properties.\n\n</div>\n\n### Returns\n\nReturns the [preset objects](#the-preset-object) for the updated presets.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPATCH /presets\n```\n\n##### Example\n\n```json\n// PATCH /presets\n\n{\n\t"keys": [15, 64],\n\t"data": {\n\t\t"layout": "tabular"\n\t}\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tupdate_presets_items(ids: [ID!]!, data: update_directus_presets_input): [directus_presets]\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tupdate_presets_items(ids: [15, 64], data: { layout: "tabular" }) {\n\t\tid\n\t\tuser\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Delete a Preset\n\nDelete an existing preset.\n\n<div class="two-up">\n<div class="left">\n\n### Returns\n\nEmpty body.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nDELETE /presets/:id\n```\n\n##### Example\n\n```\nDELETE /presets/34\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tdelete_presets_item(id: ID!): delete_one\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tdelete_presets_item(id: 32) {\n\t\tid\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Delete Multiple Presets\n\nDelete multiple existing presets.\n\n<div class="two-up">\n<div class="left">\n\n### Request Body\n\nAn array of preset primary keys\n\n### Returns\n\nEmpty body.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nDELETE /presets\n```\n\n##### Example\n\n```json\n// DELETE /presets\n[15, 251, 810]\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tdelete_presets_items(ids: [ID!]!): delete_many\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tdelete_presets_items(ids: [15, 251, 810]) {\n\t\tids\n\t}\n}\n```\n\n</div>\n</div>\n';export{n as default};
