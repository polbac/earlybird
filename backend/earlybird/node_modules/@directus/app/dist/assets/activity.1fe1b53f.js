var n='---\npageClass: page-reference\n---\n\n# Activity\n\n<div class="two-up">\n<div class="left">\n\n> All events that within Directus are tracked and stored in the activities collection. This gives you full\n> accountability over everything that happens. [Learn more about Activity](/concepts/activity/).\n\n</div>\n<div class="right">\n\n[[toc]]\n\n</div>\n</div>\n\n---\n\n## The Activity Object\n\n<div class="two-up">\n<div class="left">\n<div class="definitions">\n\n`action` **string**\\\nAction that was performed.\n\n`collection` **string**\\\nCollection identifier in which the item resides.\n\n`comment` **string**\\\nUser comment. This will store the comments that show up in the right sidebar of the item edit page in the admin app.\n\n`id` **integer**\\\nUnique identifier for the object.\n\n`ip` **string**\\\nThe IP address of the user at the time the action took place.\n\n`item` **string**\\\nUnique identifier for the item the action applied to. This is always a string, even for integer primary keys.\n\n`timestamp` **string**\\\nWhen the action happened.\n\n`user` **many-to-one**\\\nThe user who performed this action. Many-to-one to [users](/reference/api/system/users/#the-users-object).\n\n`user_agent` **string**\\\nUser agent string of the browser the user used when the action took place.\n\n`revisions` **one-to-many**\\\nAny changes that were made in this activity. One-to-many to [revisions](/reference/api/system/revisions/#the-revisions-object).\n\n</div>\n</div>\n<div class="right">\n\n```json\n{\n\t"action": "create",\n\t"collection": "articles",\n\t"comment": null,\n\t"id": 5,\n\t"ip": "139.178.128.0",\n\t"item": "1",\n\t"timestamp": "2021-02-02T12:50:26-05:00",\n\t"user": "2d321940-69f5-445f-be6b-c773fa58a820",\n\t"user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.2 Safari/605.1.15",\n\t"revisions": [4]\n}\n```\n\n</div>\n</div>\n\n---\n\n## List Activity Actions\n\nReturns a list of activity actions.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Returns\n\nAn array of up to [limit](/reference/api/query/#limit) [activity objects](#the-activity-object). If no items are\navailable, data will be an empty array.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nGET /activity\nSEARCH /activity\n```\n\n[Learn more about SEARCH ->](/reference/api/introduction/#search-http-method)\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Query {\n\tactivity: [directus_activity]\n}\n```\n\n##### Example\n\n```graphql\nquery {\n\tactivity {\n\t\t...\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Retrieve Activity Action\n\nReturns a single activity action by primary key.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Returns\n\nReturns an [activity object](#the-activity-object) if a valid identifier was provided.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nGET /activity/:id\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Query {\n\tactivity_by_id(id: ID!): directus_activity\n}\n```\n\n##### Example\n\n```graphql\nquery {\n\tactivity_by_id(id: 15) {\n\t\t...\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Create a Comment\n\nCreates a new comment on a given item.\n\n<div class="two-up">\n<div class="left">\n\n### Request Body\n\n<div class="definitions">\n\n`collection` **Required**\\\nCollection in which the item resides.\n\n`item` **Required**\\\nPrimary Key of the item to comment on.\n\n`comment` **Required**\\\nThe comment content. Supports Markdown.\n\n</div>\n\n### Returns\n\nReturns the [activity object](#the-activity-object) of the created comment.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPOST /activity/comment\n```\n\n##### Example\n\n```json\n// POST /activity/comment\n\n{\n\t"collection": "pages",\n\t"item": 3,\n\t"comment": "Hello World"\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tcreate_comment(collection: String!, item: ID!, comment: String!): directus_activity\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tcreate_comment(\n\t\tcollection: "pages",\n\t\titem: 3,\n\t\tcomment: "Hello World"\n\t) { ... }\n}\n```\n\n</div>\n</div>\n\n---\n\n## Update a Comment\n\nUpdates an existing comment by activity action primary key.\n\n<div class="two-up">\n<div class="left">\n\n### Request Body\n\n<div class="definitions">\n\n`comment` **Required**\\\nThe updated comment content. Supports Markdown.\n\n</div>\n\n### Returns\n\nReturns the [activity object](#the-activity-object) of the created comment.\n\n</div>\n<div class="right">\n\n### REST API\n\n```\nPATCH /activity/comment/:id\n```\n\n##### Example\n\n```json\n// PATCH /activity/comment/15\n\n{\n\t"comment": "Hello World!!"\n}\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tupdate_comment(id: ID!, comment: String!): directus_activity\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tupdate_comment(\n\t\tid: 3,\n\t\tcomment: "Hello World",\n\t) { ... }\n}\n```\n\n</div>\n</div>\n\n---\n\n## Delete a Comment\n\nDeletes a comment.\n\n<div class="two-up">\n<div class="left"></div>\n<div class="right">\n\n### REST API\n\n```\nDELETE /activity/comment/:id\n```\n\n##### Example\n\n```\nDELETE /activity/comment/15\n```\n\n### GraphQL\n\n```\nPOST /graphql/system\n```\n\n```graphql\ntype Mutation {\n\tdelete_comment(id: ID): delete_one\n}\n```\n\n##### Example\n\n```graphql\nmutation {\n\tdelete_comment(id: 3) {\n\t\tid\n\t}\n}\n```\n\n</div>\n</div>\n';export{n as default};
